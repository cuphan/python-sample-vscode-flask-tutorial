# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main

variables:
  # Azure Resource Manager connection created during pipeline creation
  #azureServiceConnectionId: '<GUID>'

  # Web app name
  #webAppName: '<your-web-app-name>'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  #environmentName: '<your-web-app-name>'

  # Project root folder.
  #projectRoot: $(System.DefaultWorkingDirectory)

  # change this to match the Python runtime version running on your web app.
  pythonVersion: '3.11'

#pool:
#  vmImage: ubuntu-latest

stages:

  - stage: Build
    displayName: "Build stage"
    jobs:
      - job: BuildJob
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: UsePythonVersion@0
            displayName: "Use Python $(pythonVersion)"
            inputs:
              versionSpec: '$(pythonVersion)'

          - script: |
              python -m venv antenv
              source antenv/bin/activate
              python -m pip install --upgrade pip
              pip install setup
              pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
            workingDirectory: $(projectRoot)
            displayName: "Install requirements"

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(projectRoot)'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true
            displayName: "Archive files"

          - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: drop
            displayName: "Upload package"
